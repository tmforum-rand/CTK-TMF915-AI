{"info":{"_postman_id":"d1e0c43c-ecf3-44c3-a9f9-920a9116342c","name":"CTK-AI_Management-4.0.0","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json"},"item":[{"name":"N1","item":[{"name":"/Alarm","event":[{"listen":"test","script":{"id":"e52c5b68-3cdc-42e6-90da-97be2fe9efd6","exec":["var jsonData = pm.response.json();","","if (Array.isArray(jsonData)) { ","  ","    pm.test('Array not expected as response', function (){pm.expect.fail()});","  ","","}","","pm.test(\"Status code is 201\", function () {","  pm.response.to.have.status(201);","});","","var instance = pm.response.json();","var requiredAttributes = ['alarmRaisedTime', 'alarmType', 'alarmedObject', 'href', 'id', 'perceivedSeverity', 'probableCause', 'sourceSystemId', 'state'];","","pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","","","","pm.test('Response has alarmRaisedTime attribute', function() { pm.expect(instance[\"alarmRaisedTime\"]).to.be.a('string'); });","pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","pm.test('Response has probableCause attribute', function() { pm.expect(instance[\"probableCause\"]).to.be.a('string'); });","pm.test('Response has sourceSystemId attribute', function() { pm.expect(instance[\"sourceSystemId\"]).to.be.a('string'); });","pm.test('Response has state attribute', function() { pm.expect(instance[\"state\"]).to.be.a('string'); });","","pm.globals.set('ALARMRAISEDTIMEAL01', instance['alarmRaisedTime']);","pm.globals.set('HREFAL01', instance['href']);","pm.globals.set('IDAL01', instance['id']);","pm.globals.set('PROBABLECAUSEAL01', instance['probableCause']);","pm.globals.set('SOURCESYSTEMIDAL01', instance['sourceSystemId']);","pm.globals.set('STATEAL01', instance['state']);","","pm.test('Body includes value held on alarmRaisedTime', function () {","  pm.expect(pm.response.text()).to.include(instance['alarmRaisedTime']);","});","pm.test('Body includes value held on href', function () {","  pm.expect(pm.response.text()).to.include(instance['href']);","});","pm.test('Body includes value held on id', function () {","  pm.expect(pm.response.text()).to.include(instance['id']);","});","pm.test('Body includes value held on probableCause', function () {","  pm.expect(pm.response.text()).to.include(instance['probableCause']);","});","pm.test('Body includes value held on sourceSystemId', function () {","  pm.expect(pm.response.text()).to.include(instance['sourceSystemId']);","});","pm.test('Body includes value held on state', function () {","  pm.expect(pm.response.text()).to.include(instance['state']);","});",""],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"alarmRaisedTime\": \"2019-07-03T03:32:17.235Z\",\n    \"alarmType\": \"environmentalAlarm\",\n    \"alarmedObject\": {\n        \"id\": \"93051825\",\n        \"href\": \"/resourceInventoryManagement/v4/resource/93051825\"\n    }, \n    \"perceivedSeverity\": \"MAJOR\",\n    \"probableCause\": \"rectifierLowVoltage\",\n    \"sourceSystemId\": \"aiOps-1\",\n    \"state\": \"raised\"\n}"},"url":{"raw":"{{AI_Management}}alarm","host":["{{AI_Management}}alarm"]},"description":"This operation creates a Alarm"},"response":[]},{"name":"/Alarm","event":[{"listen":"test","script":{"id":"082e2bf7-b37d-458b-b3f9-48c00f82a9b0","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['alarmRaisedTime', 'alarmType', 'alarmedObject', 'href', 'id', 'perceivedSeverity', 'probableCause', 'sourceSystemId', 'state'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has alarmRaisedTime attribute', function() { pm.expect(instance[\"alarmRaisedTime\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has probableCause attribute', function() { pm.expect(instance[\"probableCause\"]).to.be.a('string'); });","        pm.test('Response has sourceSystemId attribute', function() { pm.expect(instance[\"sourceSystemId\"]).to.be.a('string'); });","        pm.test('Response has state attribute', function() { pm.expect(instance[\"state\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on alarmRaisedTime', function () {","            pm.expect(pm.response.text()).to.include(instance['alarmRaisedTime']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on probableCause', function () {","            pm.expect(pm.response.text()).to.include(instance['probableCause']);","        });","        pm.test('Body includes value held on sourceSystemId', function () {","            pm.expect(pm.response.text()).to.include(instance['sourceSystemId']);","        });","        pm.test('Body includes value held on state', function () {","            pm.expect(pm.response.text()).to.include(instance['state']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAL01\")) {","            pm.test('alarmRaisedTime is ' + pm.globals.get(\"ALARMRAISEDTIMEAL01\"), function() {pm.expect(instance['alarmRaisedTime']) == pm.globals.get('ALARMRAISEDTIMEAL01');});","            pm.test('href is ' + pm.globals.get(\"HREFAL01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAL01');});","            pm.test('id is ' + pm.globals.get(\"IDAL01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAL01');});","            pm.test('probableCause is ' + pm.globals.get(\"PROBABLECAUSEAL01\"), function() {pm.expect(instance['probableCause']) == pm.globals.get('PROBABLECAUSEAL01');});","            pm.test('sourceSystemId is ' + pm.globals.get(\"SOURCESYSTEMIDAL01\"), function() {pm.expect(instance['sourceSystemId']) == pm.globals.get('SOURCESYSTEMIDAL01');});","            pm.test('state is ' + pm.globals.get(\"STATEAL01\"), function() {pm.expect(instance['state']) == pm.globals.get('STATEAL01');});","        }","        if (instance.id == pm.globals.get(\"IDAL02\")) {","            pm.test('alarmRaisedTime is ' + pm.globals.get(\"ALARMRAISEDTIMEAL02\"), function() {pm.expect(instance['alarmRaisedTime']) == pm.globals.get('ALARMRAISEDTIMEAL02');});","            pm.test('href is ' + pm.globals.get(\"HREFAL02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAL02');});","            pm.test('id is ' + pm.globals.get(\"IDAL02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAL02');});","            pm.test('probableCause is ' + pm.globals.get(\"PROBABLECAUSEAL02\"), function() {pm.expect(instance['probableCause']) == pm.globals.get('PROBABLECAUSEAL02');});","            pm.test('sourceSystemId is ' + pm.globals.get(\"SOURCESYSTEMIDAL02\"), function() {pm.expect(instance['sourceSystemId']) == pm.globals.get('SOURCESYSTEMIDAL02');});","            pm.test('state is ' + pm.globals.get(\"STATEAL02\"), function() {pm.expect(instance['state']) == pm.globals.get('STATEAL02');});","        }  ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['alarmRaisedTime', 'alarmType', 'alarmedObject', 'href', 'id', 'perceivedSeverity', 'probableCause', 'sourceSystemId', 'state'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has alarmRaisedTime attribute', function() { pm.expect(instance[\"alarmRaisedTime\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has probableCause attribute', function() { pm.expect(instance[\"probableCause\"]).to.be.a('string'); });","        pm.test('Response has sourceSystemId attribute', function() { pm.expect(instance[\"sourceSystemId\"]).to.be.a('string'); });","        pm.test('Response has state attribute', function() { pm.expect(instance[\"state\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on alarmRaisedTime', function () {","            pm.expect(pm.response.text()).to.include(instance['alarmRaisedTime']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on probableCause', function () {","            pm.expect(pm.response.text()).to.include(instance['probableCause']);","        });","        pm.test('Body includes value held on sourceSystemId', function () {","            pm.expect(pm.response.text()).to.include(instance['sourceSystemId']);","        });","        pm.test('Body includes value held on state', function () {","            pm.expect(pm.response.text()).to.include(instance['state']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAL01\")) {","            pm.test('alarmRaisedTime is ' + pm.globals.get(\"ALARMRAISEDTIMEAL01\"), function() {pm.expect(instance['alarmRaisedTime']) == pm.globals.get('ALARMRAISEDTIMEAL01');});","            pm.test('href is ' + pm.globals.get(\"HREFAL01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAL01');});","            pm.test('id is ' + pm.globals.get(\"IDAL01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAL01');});","            pm.test('probableCause is ' + pm.globals.get(\"PROBABLECAUSEAL01\"), function() {pm.expect(instance['probableCause']) == pm.globals.get('PROBABLECAUSEAL01');});","            pm.test('sourceSystemId is ' + pm.globals.get(\"SOURCESYSTEMIDAL01\"), function() {pm.expect(instance['sourceSystemId']) == pm.globals.get('SOURCESYSTEMIDAL01');});","            pm.test('state is ' + pm.globals.get(\"STATEAL01\"), function() {pm.expect(instance['state']) == pm.globals.get('STATEAL01');});","        }","        if (instance.id == pm.globals.get(\"IDAL02\")) {","            pm.test('alarmRaisedTime is ' + pm.globals.get(\"ALARMRAISEDTIMEAL02\"), function() {pm.expect(instance['alarmRaisedTime']) == pm.globals.get('ALARMRAISEDTIMEAL02');});","            pm.test('href is ' + pm.globals.get(\"HREFAL02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAL02');});","            pm.test('id is ' + pm.globals.get(\"IDAL02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAL02');});","            pm.test('probableCause is ' + pm.globals.get(\"PROBABLECAUSEAL02\"), function() {pm.expect(instance['probableCause']) == pm.globals.get('PROBABLECAUSEAL02');});","            pm.test('sourceSystemId is ' + pm.globals.get(\"SOURCESYSTEMIDAL02\"), function() {pm.expect(instance['sourceSystemId']) == pm.globals.get('SOURCESYSTEMIDAL02');});","            pm.test('state is ' + pm.globals.get(\"STATEAL02\"), function() {pm.expect(instance['state']) == pm.globals.get('STATEAL02');});","        }","   ","  }","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}alarm","host":["{{AI_Management}}alarm"]},"description":"This operation search for the created Alarm"},"response":[]},{"name":"/Alarm/{{IDAL01}}","event":[{"listen":"test","script":{"id":"ad98ec1a-f5c3-4bd7-9c8a-03ceb748f57e","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['alarmRaisedTime', 'alarmType', 'alarmedObject', 'href', 'id', 'perceivedSeverity', 'probableCause', 'sourceSystemId', 'state'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has alarmRaisedTime attribute', function() { pm.expect(instance[\"alarmRaisedTime\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has probableCause attribute', function() { pm.expect(instance[\"probableCause\"]).to.be.a('string'); });","        pm.test('Response has sourceSystemId attribute', function() { pm.expect(instance[\"sourceSystemId\"]).to.be.a('string'); });","        pm.test('Response has state attribute', function() { pm.expect(instance[\"state\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on alarmRaisedTime', function () {","            pm.expect(pm.response.text()).to.include(instance['alarmRaisedTime']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on probableCause', function () {","            pm.expect(pm.response.text()).to.include(instance['probableCause']);","        });","        pm.test('Body includes value held on sourceSystemId', function () {","            pm.expect(pm.response.text()).to.include(instance['sourceSystemId']);","        });","        pm.test('Body includes value held on state', function () {","            pm.expect(pm.response.text()).to.include(instance['state']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAL01\")) {","            pm.test('alarmRaisedTime is ' + pm.globals.get(\"ALARMRAISEDTIMEAL01\"), function() {pm.expect(instance['alarmRaisedTime']) == pm.globals.get('ALARMRAISEDTIMEAL01');});","            pm.test('href is ' + pm.globals.get(\"HREFAL01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAL01');});","            pm.test('id is ' + pm.globals.get(\"IDAL01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAL01');});","            pm.test('probableCause is ' + pm.globals.get(\"PROBABLECAUSEAL01\"), function() {pm.expect(instance['probableCause']) == pm.globals.get('PROBABLECAUSEAL01');});","            pm.test('sourceSystemId is ' + pm.globals.get(\"SOURCESYSTEMIDAL01\"), function() {pm.expect(instance['sourceSystemId']) == pm.globals.get('SOURCESYSTEMIDAL01');});","            pm.test('state is ' + pm.globals.get(\"STATEAL01\"), function() {pm.expect(instance['state']) == pm.globals.get('STATEAL01');});","        }","        if (instance.id == pm.globals.get(\"IDAL02\")) {","            pm.test('IDAL02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['alarmRaisedTime', 'alarmType', 'alarmedObject', 'href', 'id', 'perceivedSeverity', 'probableCause', 'sourceSystemId', 'state'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has alarmRaisedTime attribute', function() { pm.expect(instance[\"alarmRaisedTime\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has probableCause attribute', function() { pm.expect(instance[\"probableCause\"]).to.be.a('string'); });","        pm.test('Response has sourceSystemId attribute', function() { pm.expect(instance[\"sourceSystemId\"]).to.be.a('string'); });","        pm.test('Response has state attribute', function() { pm.expect(instance[\"state\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on alarmRaisedTime', function () {","            pm.expect(pm.response.text()).to.include(instance['alarmRaisedTime']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on probableCause', function () {","            pm.expect(pm.response.text()).to.include(instance['probableCause']);","        });","        pm.test('Body includes value held on sourceSystemId', function () {","            pm.expect(pm.response.text()).to.include(instance['sourceSystemId']);","        });","        pm.test('Body includes value held on state', function () {","            pm.expect(pm.response.text()).to.include(instance['state']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAL01\")) {","            pm.test('alarmRaisedTime is ' + pm.globals.get(\"ALARMRAISEDTIMEAL01\"), function() {pm.expect(instance['alarmRaisedTime']) == pm.globals.get('ALARMRAISEDTIMEAL01');});","            pm.test('href is ' + pm.globals.get(\"HREFAL01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAL01');});","            pm.test('id is ' + pm.globals.get(\"IDAL01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAL01');});","            pm.test('probableCause is ' + pm.globals.get(\"PROBABLECAUSEAL01\"), function() {pm.expect(instance['probableCause']) == pm.globals.get('PROBABLECAUSEAL01');});","            pm.test('sourceSystemId is ' + pm.globals.get(\"SOURCESYSTEMIDAL01\"), function() {pm.expect(instance['sourceSystemId']) == pm.globals.get('SOURCESYSTEMIDAL01');});","            pm.test('state is ' + pm.globals.get(\"STATEAL01\"), function() {pm.expect(instance['state']) == pm.globals.get('STATEAL01');});","        }","        if (instance.id == pm.globals.get(\"IDAL02\")) {","            pm.test('IDAL02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}alarm/{{IDAL01}}","host":["{{AI_Management}}alarm"],"path":["{{IDAL01}}"]},"description":"This operation search for one of the created Alarm"},"response":[]}],"protocolProfileBehavior":{}},{"name":"N2","item":[{"name":"/Alarm?fields=alarmRaisedTime","event":[{"listen":"test","script":{"id":"0f0e5297-3d68-4ad5-a737-c8e8c6ff2cdb","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}alarm?fields=alarmRaisedTime","host":["{{AI_Management}}alarm"],"query":[{"key":"fields","value":"alarmRaisedTime"}]},"description":"This operation filter a Alarm"},"response":[]},{"name":"/Alarm?alarmRaisedTime={{ALARMRAISEDTIMEAL01}}","event":[{"listen":"test","script":{"id":"cfdfbe33-e786-4678-8166-307043c38a6f","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['alarmRaisedTime', 'alarmType', 'alarmedObject', 'href', 'id', 'perceivedSeverity', 'probableCause', 'sourceSystemId', 'state'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has alarmRaisedTime attribute', function() { pm.expect(instance[\"alarmRaisedTime\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has probableCause attribute', function() { pm.expect(instance[\"probableCause\"]).to.be.a('string'); });","        pm.test('Response has sourceSystemId attribute', function() { pm.expect(instance[\"sourceSystemId\"]).to.be.a('string'); });","        pm.test('Response has state attribute', function() { pm.expect(instance[\"state\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on alarmRaisedTime', function () {","            pm.expect(pm.response.text()).to.include(instance['alarmRaisedTime']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on probableCause', function () {","            pm.expect(pm.response.text()).to.include(instance['probableCause']);","        });","        pm.test('Body includes value held on sourceSystemId', function () {","            pm.expect(pm.response.text()).to.include(instance['sourceSystemId']);","        });","        pm.test('Body includes value held on state', function () {","            pm.expect(pm.response.text()).to.include(instance['state']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAL01\")) {","            pm.test('alarmRaisedTime is ' + pm.globals.get(\"ALARMRAISEDTIMEAL01\"), function() {pm.expect(instance['alarmRaisedTime']) == pm.globals.get('ALARMRAISEDTIMEAL01');});","            pm.test('href is ' + pm.globals.get(\"HREFAL01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAL01');});","            pm.test('id is ' + pm.globals.get(\"IDAL01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAL01');});","            pm.test('probableCause is ' + pm.globals.get(\"PROBABLECAUSEAL01\"), function() {pm.expect(instance['probableCause']) == pm.globals.get('PROBABLECAUSEAL01');});","            pm.test('sourceSystemId is ' + pm.globals.get(\"SOURCESYSTEMIDAL01\"), function() {pm.expect(instance['sourceSystemId']) == pm.globals.get('SOURCESYSTEMIDAL01');});","            pm.test('state is ' + pm.globals.get(\"STATEAL01\"), function() {pm.expect(instance['state']) == pm.globals.get('STATEAL01');});","        }","        if (instance.id == pm.globals.get(\"IDAL02\")) {","            pm.test('IDAL02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['alarmRaisedTime', 'alarmType', 'alarmedObject', 'href', 'id', 'perceivedSeverity', 'probableCause', 'sourceSystemId', 'state'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has alarmRaisedTime attribute', function() { pm.expect(instance[\"alarmRaisedTime\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has probableCause attribute', function() { pm.expect(instance[\"probableCause\"]).to.be.a('string'); });","        pm.test('Response has sourceSystemId attribute', function() { pm.expect(instance[\"sourceSystemId\"]).to.be.a('string'); });","        pm.test('Response has state attribute', function() { pm.expect(instance[\"state\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on alarmRaisedTime', function () {","            pm.expect(pm.response.text()).to.include(instance['alarmRaisedTime']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on probableCause', function () {","            pm.expect(pm.response.text()).to.include(instance['probableCause']);","        });","        pm.test('Body includes value held on sourceSystemId', function () {","            pm.expect(pm.response.text()).to.include(instance['sourceSystemId']);","        });","        pm.test('Body includes value held on state', function () {","            pm.expect(pm.response.text()).to.include(instance['state']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAL01\")) {","            pm.test('alarmRaisedTime is ' + pm.globals.get(\"ALARMRAISEDTIMEAL01\"), function() {pm.expect(instance['alarmRaisedTime']) == pm.globals.get('ALARMRAISEDTIMEAL01');});","            pm.test('href is ' + pm.globals.get(\"HREFAL01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAL01');});","            pm.test('id is ' + pm.globals.get(\"IDAL01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAL01');});","            pm.test('probableCause is ' + pm.globals.get(\"PROBABLECAUSEAL01\"), function() {pm.expect(instance['probableCause']) == pm.globals.get('PROBABLECAUSEAL01');});","            pm.test('sourceSystemId is ' + pm.globals.get(\"SOURCESYSTEMIDAL01\"), function() {pm.expect(instance['sourceSystemId']) == pm.globals.get('SOURCESYSTEMIDAL01');});","            pm.test('state is ' + pm.globals.get(\"STATEAL01\"), function() {pm.expect(instance['state']) == pm.globals.get('STATEAL01');});","        }","        if (instance.id == pm.globals.get(\"IDAL02\")) {","            pm.test('IDAL02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}alarm?alarmRaisedTime=\"{{ALARMRAISEDTIMEAL01}}\"","host":["{{AI_Management}}alarm"],"query":[{"key":"alarmRaisedTime","value":"\"{{ALARMRAISEDTIMEAL01}}\""}]},"description":"This operation filter a Alarm"},"response":[]},{"name":"/Alarm?fields=href","event":[{"listen":"test","script":{"id":"f4ce0f11-8713-40f5-9e95-31d657315415","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}alarm?fields=href","host":["{{AI_Management}}alarm"],"query":[{"key":"fields","value":"href"}]},"description":"This operation filter a Alarm"},"response":[]},{"name":"/Alarm?fields=id","event":[{"listen":"test","script":{"id":"77996f5a-e8e5-42c6-b1f1-1d9ba39dc606","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}alarm?fields=id","host":["{{AI_Management}}alarm"],"query":[{"key":"fields","value":"id"}]},"description":"This operation filter a Alarm"},"response":[]},{"name":"/Alarm?id={{IDAL01}}","event":[{"listen":"test","script":{"id":"24846e86-743d-415e-9415-f7b6515d928e","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['alarmRaisedTime', 'alarmType', 'alarmedObject', 'href', 'id', 'perceivedSeverity', 'probableCause', 'sourceSystemId', 'state'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has alarmRaisedTime attribute', function() { pm.expect(instance[\"alarmRaisedTime\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has probableCause attribute', function() { pm.expect(instance[\"probableCause\"]).to.be.a('string'); });","        pm.test('Response has sourceSystemId attribute', function() { pm.expect(instance[\"sourceSystemId\"]).to.be.a('string'); });","        pm.test('Response has state attribute', function() { pm.expect(instance[\"state\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on alarmRaisedTime', function () {","            pm.expect(pm.response.text()).to.include(instance['alarmRaisedTime']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on probableCause', function () {","            pm.expect(pm.response.text()).to.include(instance['probableCause']);","        });","        pm.test('Body includes value held on sourceSystemId', function () {","            pm.expect(pm.response.text()).to.include(instance['sourceSystemId']);","        });","        pm.test('Body includes value held on state', function () {","            pm.expect(pm.response.text()).to.include(instance['state']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAL01\")) {","            pm.test('alarmRaisedTime is ' + pm.globals.get(\"ALARMRAISEDTIMEAL01\"), function() {pm.expect(instance['alarmRaisedTime']) == pm.globals.get('ALARMRAISEDTIMEAL01');});","            pm.test('href is ' + pm.globals.get(\"HREFAL01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAL01');});","            pm.test('id is ' + pm.globals.get(\"IDAL01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAL01');});","            pm.test('probableCause is ' + pm.globals.get(\"PROBABLECAUSEAL01\"), function() {pm.expect(instance['probableCause']) == pm.globals.get('PROBABLECAUSEAL01');});","            pm.test('sourceSystemId is ' + pm.globals.get(\"SOURCESYSTEMIDAL01\"), function() {pm.expect(instance['sourceSystemId']) == pm.globals.get('SOURCESYSTEMIDAL01');});","            pm.test('state is ' + pm.globals.get(\"STATEAL01\"), function() {pm.expect(instance['state']) == pm.globals.get('STATEAL01');});","        }","        if (instance.id == pm.globals.get(\"IDAL02\")) {","            pm.test('IDAL02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['alarmRaisedTime', 'alarmType', 'alarmedObject', 'href', 'id', 'perceivedSeverity', 'probableCause', 'sourceSystemId', 'state'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has alarmRaisedTime attribute', function() { pm.expect(instance[\"alarmRaisedTime\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has probableCause attribute', function() { pm.expect(instance[\"probableCause\"]).to.be.a('string'); });","        pm.test('Response has sourceSystemId attribute', function() { pm.expect(instance[\"sourceSystemId\"]).to.be.a('string'); });","        pm.test('Response has state attribute', function() { pm.expect(instance[\"state\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on alarmRaisedTime', function () {","            pm.expect(pm.response.text()).to.include(instance['alarmRaisedTime']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on probableCause', function () {","            pm.expect(pm.response.text()).to.include(instance['probableCause']);","        });","        pm.test('Body includes value held on sourceSystemId', function () {","            pm.expect(pm.response.text()).to.include(instance['sourceSystemId']);","        });","        pm.test('Body includes value held on state', function () {","            pm.expect(pm.response.text()).to.include(instance['state']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAL01\")) {","            pm.test('alarmRaisedTime is ' + pm.globals.get(\"ALARMRAISEDTIMEAL01\"), function() {pm.expect(instance['alarmRaisedTime']) == pm.globals.get('ALARMRAISEDTIMEAL01');});","            pm.test('href is ' + pm.globals.get(\"HREFAL01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAL01');});","            pm.test('id is ' + pm.globals.get(\"IDAL01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAL01');});","            pm.test('probableCause is ' + pm.globals.get(\"PROBABLECAUSEAL01\"), function() {pm.expect(instance['probableCause']) == pm.globals.get('PROBABLECAUSEAL01');});","            pm.test('sourceSystemId is ' + pm.globals.get(\"SOURCESYSTEMIDAL01\"), function() {pm.expect(instance['sourceSystemId']) == pm.globals.get('SOURCESYSTEMIDAL01');});","            pm.test('state is ' + pm.globals.get(\"STATEAL01\"), function() {pm.expect(instance['state']) == pm.globals.get('STATEAL01');});","        }","        if (instance.id == pm.globals.get(\"IDAL02\")) {","            pm.test('IDAL02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}alarm?id={{IDAL01}}","host":["{{AI_Management}}alarm"],"query":[{"key":"id","value":"{{IDAL01}}"}]},"description":"This operation filter a Alarm"},"response":[]},{"name":"/Alarm?fields=probableCause","event":[{"listen":"test","script":{"id":"c5247c11-0d0b-4897-9e67-2d826a7d97fc","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}alarm?fields=probableCause","host":["{{AI_Management}}alarm"],"query":[{"key":"fields","value":"probableCause"}]},"description":"This operation filter a Alarm"},"response":[]},{"name":"/Alarm?probableCause={{PROBABLECAUSEAL01}}","event":[{"listen":"test","script":{"id":"233039de-7a34-4787-8c95-0ea6d1f77de1","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['alarmRaisedTime', 'alarmType', 'alarmedObject', 'href', 'id', 'perceivedSeverity', 'probableCause', 'sourceSystemId', 'state'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has alarmRaisedTime attribute', function() { pm.expect(instance[\"alarmRaisedTime\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has probableCause attribute', function() { pm.expect(instance[\"probableCause\"]).to.be.a('string'); });","        pm.test('Response has sourceSystemId attribute', function() { pm.expect(instance[\"sourceSystemId\"]).to.be.a('string'); });","        pm.test('Response has state attribute', function() { pm.expect(instance[\"state\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on alarmRaisedTime', function () {","            pm.expect(pm.response.text()).to.include(instance['alarmRaisedTime']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on probableCause', function () {","            pm.expect(pm.response.text()).to.include(instance['probableCause']);","        });","        pm.test('Body includes value held on sourceSystemId', function () {","            pm.expect(pm.response.text()).to.include(instance['sourceSystemId']);","        });","        pm.test('Body includes value held on state', function () {","            pm.expect(pm.response.text()).to.include(instance['state']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAL01\")) {","            pm.test('alarmRaisedTime is ' + pm.globals.get(\"ALARMRAISEDTIMEAL01\"), function() {pm.expect(instance['alarmRaisedTime']) == pm.globals.get('ALARMRAISEDTIMEAL01');});","            pm.test('href is ' + pm.globals.get(\"HREFAL01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAL01');});","            pm.test('id is ' + pm.globals.get(\"IDAL01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAL01');});","            pm.test('probableCause is ' + pm.globals.get(\"PROBABLECAUSEAL01\"), function() {pm.expect(instance['probableCause']) == pm.globals.get('PROBABLECAUSEAL01');});","            pm.test('sourceSystemId is ' + pm.globals.get(\"SOURCESYSTEMIDAL01\"), function() {pm.expect(instance['sourceSystemId']) == pm.globals.get('SOURCESYSTEMIDAL01');});","            pm.test('state is ' + pm.globals.get(\"STATEAL01\"), function() {pm.expect(instance['state']) == pm.globals.get('STATEAL01');});","        }","        if (instance.id == pm.globals.get(\"IDAL02\")) {","            pm.test('IDAL02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['alarmRaisedTime', 'alarmType', 'alarmedObject', 'href', 'id', 'perceivedSeverity', 'probableCause', 'sourceSystemId', 'state'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has alarmRaisedTime attribute', function() { pm.expect(instance[\"alarmRaisedTime\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has probableCause attribute', function() { pm.expect(instance[\"probableCause\"]).to.be.a('string'); });","        pm.test('Response has sourceSystemId attribute', function() { pm.expect(instance[\"sourceSystemId\"]).to.be.a('string'); });","        pm.test('Response has state attribute', function() { pm.expect(instance[\"state\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on alarmRaisedTime', function () {","            pm.expect(pm.response.text()).to.include(instance['alarmRaisedTime']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on probableCause', function () {","            pm.expect(pm.response.text()).to.include(instance['probableCause']);","        });","        pm.test('Body includes value held on sourceSystemId', function () {","            pm.expect(pm.response.text()).to.include(instance['sourceSystemId']);","        });","        pm.test('Body includes value held on state', function () {","            pm.expect(pm.response.text()).to.include(instance['state']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAL01\")) {","            pm.test('alarmRaisedTime is ' + pm.globals.get(\"ALARMRAISEDTIMEAL01\"), function() {pm.expect(instance['alarmRaisedTime']) == pm.globals.get('ALARMRAISEDTIMEAL01');});","            pm.test('href is ' + pm.globals.get(\"HREFAL01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAL01');});","            pm.test('id is ' + pm.globals.get(\"IDAL01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAL01');});","            pm.test('probableCause is ' + pm.globals.get(\"PROBABLECAUSEAL01\"), function() {pm.expect(instance['probableCause']) == pm.globals.get('PROBABLECAUSEAL01');});","            pm.test('sourceSystemId is ' + pm.globals.get(\"SOURCESYSTEMIDAL01\"), function() {pm.expect(instance['sourceSystemId']) == pm.globals.get('SOURCESYSTEMIDAL01');});","            pm.test('state is ' + pm.globals.get(\"STATEAL01\"), function() {pm.expect(instance['state']) == pm.globals.get('STATEAL01');});","        }","        if (instance.id == pm.globals.get(\"IDAL02\")) {","            pm.test('IDAL02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}alarm?probableCause={{PROBABLECAUSEAL01}}","host":["{{AI_Management}}alarm"],"query":[{"key":"probableCause","value":"{{PROBABLECAUSEAL01}}"}]},"description":"This operation filter a Alarm"},"response":[]},{"name":"/Alarm?fields=sourceSystemId","event":[{"listen":"test","script":{"id":"d486bcb0-bc85-4a6c-a686-6307fc60592c","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}alarm?fields=sourceSystemId","host":["{{AI_Management}}alarm"],"query":[{"key":"fields","value":"sourceSystemId"}]},"description":"This operation filter a Alarm"},"response":[]},{"name":"/Alarm?sourceSystemId={{SOURCESYSTEMIDAL01}}","event":[{"listen":"test","script":{"id":"ba413a46-cf8f-4000-bbcf-d017b24e7384","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['alarmRaisedTime', 'alarmType', 'alarmedObject', 'href', 'id', 'perceivedSeverity', 'probableCause', 'sourceSystemId', 'state'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has alarmRaisedTime attribute', function() { pm.expect(instance[\"alarmRaisedTime\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has probableCause attribute', function() { pm.expect(instance[\"probableCause\"]).to.be.a('string'); });","        pm.test('Response has sourceSystemId attribute', function() { pm.expect(instance[\"sourceSystemId\"]).to.be.a('string'); });","        pm.test('Response has state attribute', function() { pm.expect(instance[\"state\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on alarmRaisedTime', function () {","            pm.expect(pm.response.text()).to.include(instance['alarmRaisedTime']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on probableCause', function () {","            pm.expect(pm.response.text()).to.include(instance['probableCause']);","        });","        pm.test('Body includes value held on sourceSystemId', function () {","            pm.expect(pm.response.text()).to.include(instance['sourceSystemId']);","        });","        pm.test('Body includes value held on state', function () {","            pm.expect(pm.response.text()).to.include(instance['state']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAL01\")) {","            pm.test('alarmRaisedTime is ' + pm.globals.get(\"ALARMRAISEDTIMEAL01\"), function() {pm.expect(instance['alarmRaisedTime']) == pm.globals.get('ALARMRAISEDTIMEAL01');});","            pm.test('href is ' + pm.globals.get(\"HREFAL01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAL01');});","            pm.test('id is ' + pm.globals.get(\"IDAL01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAL01');});","            pm.test('probableCause is ' + pm.globals.get(\"PROBABLECAUSEAL01\"), function() {pm.expect(instance['probableCause']) == pm.globals.get('PROBABLECAUSEAL01');});","            pm.test('sourceSystemId is ' + pm.globals.get(\"SOURCESYSTEMIDAL01\"), function() {pm.expect(instance['sourceSystemId']) == pm.globals.get('SOURCESYSTEMIDAL01');});","            pm.test('state is ' + pm.globals.get(\"STATEAL01\"), function() {pm.expect(instance['state']) == pm.globals.get('STATEAL01');});","        }","        if (instance.id == pm.globals.get(\"IDAL02\")) {","            pm.test('IDAL02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['alarmRaisedTime', 'alarmType', 'alarmedObject', 'href', 'id', 'perceivedSeverity', 'probableCause', 'sourceSystemId', 'state'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has alarmRaisedTime attribute', function() { pm.expect(instance[\"alarmRaisedTime\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has probableCause attribute', function() { pm.expect(instance[\"probableCause\"]).to.be.a('string'); });","        pm.test('Response has sourceSystemId attribute', function() { pm.expect(instance[\"sourceSystemId\"]).to.be.a('string'); });","        pm.test('Response has state attribute', function() { pm.expect(instance[\"state\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on alarmRaisedTime', function () {","            pm.expect(pm.response.text()).to.include(instance['alarmRaisedTime']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on probableCause', function () {","            pm.expect(pm.response.text()).to.include(instance['probableCause']);","        });","        pm.test('Body includes value held on sourceSystemId', function () {","            pm.expect(pm.response.text()).to.include(instance['sourceSystemId']);","        });","        pm.test('Body includes value held on state', function () {","            pm.expect(pm.response.text()).to.include(instance['state']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAL01\")) {","            pm.test('alarmRaisedTime is ' + pm.globals.get(\"ALARMRAISEDTIMEAL01\"), function() {pm.expect(instance['alarmRaisedTime']) == pm.globals.get('ALARMRAISEDTIMEAL01');});","            pm.test('href is ' + pm.globals.get(\"HREFAL01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAL01');});","            pm.test('id is ' + pm.globals.get(\"IDAL01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAL01');});","            pm.test('probableCause is ' + pm.globals.get(\"PROBABLECAUSEAL01\"), function() {pm.expect(instance['probableCause']) == pm.globals.get('PROBABLECAUSEAL01');});","            pm.test('sourceSystemId is ' + pm.globals.get(\"SOURCESYSTEMIDAL01\"), function() {pm.expect(instance['sourceSystemId']) == pm.globals.get('SOURCESYSTEMIDAL01');});","            pm.test('state is ' + pm.globals.get(\"STATEAL01\"), function() {pm.expect(instance['state']) == pm.globals.get('STATEAL01');});","        }","        if (instance.id == pm.globals.get(\"IDAL02\")) {","            pm.test('IDAL02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}alarm?sourceSystemId={{SOURCESYSTEMIDAL01}}","host":["{{AI_Management}}alarm"],"query":[{"key":"sourceSystemId","value":"{{SOURCESYSTEMIDAL01}}"}]},"description":"This operation filter a Alarm"},"response":[]},{"name":"/Alarm?fields=state","event":[{"listen":"test","script":{"id":"7ecf4d10-357d-4010-bdd2-2dd6a29fa2db","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}alarm?fields=state","host":["{{AI_Management}}alarm"],"query":[{"key":"fields","value":"state"}]},"description":"This operation filter a Alarm"},"response":[]},{"name":"/Alarm?state={{STATEAL01}}","event":[{"listen":"test","script":{"id":"91bf074c-8ea6-4081-9ff1-18c866baf015","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['alarmRaisedTime', 'alarmType', 'alarmedObject', 'href', 'id', 'perceivedSeverity', 'probableCause', 'sourceSystemId', 'state'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has alarmRaisedTime attribute', function() { pm.expect(instance[\"alarmRaisedTime\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has probableCause attribute', function() { pm.expect(instance[\"probableCause\"]).to.be.a('string'); });","        pm.test('Response has sourceSystemId attribute', function() { pm.expect(instance[\"sourceSystemId\"]).to.be.a('string'); });","        pm.test('Response has state attribute', function() { pm.expect(instance[\"state\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on alarmRaisedTime', function () {","            pm.expect(pm.response.text()).to.include(instance['alarmRaisedTime']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on probableCause', function () {","            pm.expect(pm.response.text()).to.include(instance['probableCause']);","        });","        pm.test('Body includes value held on sourceSystemId', function () {","            pm.expect(pm.response.text()).to.include(instance['sourceSystemId']);","        });","        pm.test('Body includes value held on state', function () {","            pm.expect(pm.response.text()).to.include(instance['state']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAL01\")) {","            pm.test('alarmRaisedTime is ' + pm.globals.get(\"ALARMRAISEDTIMEAL01\"), function() {pm.expect(instance['alarmRaisedTime']) == pm.globals.get('ALARMRAISEDTIMEAL01');});","            pm.test('href is ' + pm.globals.get(\"HREFAL01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAL01');});","            pm.test('id is ' + pm.globals.get(\"IDAL01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAL01');});","            pm.test('probableCause is ' + pm.globals.get(\"PROBABLECAUSEAL01\"), function() {pm.expect(instance['probableCause']) == pm.globals.get('PROBABLECAUSEAL01');});","            pm.test('sourceSystemId is ' + pm.globals.get(\"SOURCESYSTEMIDAL01\"), function() {pm.expect(instance['sourceSystemId']) == pm.globals.get('SOURCESYSTEMIDAL01');});","            pm.test('state is ' + pm.globals.get(\"STATEAL01\"), function() {pm.expect(instance['state']) == pm.globals.get('STATEAL01');});","        }","        if (instance.id == pm.globals.get(\"IDAL02\")) {","            pm.test('IDAL02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['alarmRaisedTime', 'alarmType', 'alarmedObject', 'href', 'id', 'perceivedSeverity', 'probableCause', 'sourceSystemId', 'state'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has alarmRaisedTime attribute', function() { pm.expect(instance[\"alarmRaisedTime\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has probableCause attribute', function() { pm.expect(instance[\"probableCause\"]).to.be.a('string'); });","        pm.test('Response has sourceSystemId attribute', function() { pm.expect(instance[\"sourceSystemId\"]).to.be.a('string'); });","        pm.test('Response has state attribute', function() { pm.expect(instance[\"state\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on alarmRaisedTime', function () {","            pm.expect(pm.response.text()).to.include(instance['alarmRaisedTime']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on probableCause', function () {","            pm.expect(pm.response.text()).to.include(instance['probableCause']);","        });","        pm.test('Body includes value held on sourceSystemId', function () {","            pm.expect(pm.response.text()).to.include(instance['sourceSystemId']);","        });","        pm.test('Body includes value held on state', function () {","            pm.expect(pm.response.text()).to.include(instance['state']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAL01\")) {","            pm.test('alarmRaisedTime is ' + pm.globals.get(\"ALARMRAISEDTIMEAL01\"), function() {pm.expect(instance['alarmRaisedTime']) == pm.globals.get('ALARMRAISEDTIMEAL01');});","            pm.test('href is ' + pm.globals.get(\"HREFAL01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAL01');});","            pm.test('id is ' + pm.globals.get(\"IDAL01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAL01');});","            pm.test('probableCause is ' + pm.globals.get(\"PROBABLECAUSEAL01\"), function() {pm.expect(instance['probableCause']) == pm.globals.get('PROBABLECAUSEAL01');});","            pm.test('sourceSystemId is ' + pm.globals.get(\"SOURCESYSTEMIDAL01\"), function() {pm.expect(instance['sourceSystemId']) == pm.globals.get('SOURCESYSTEMIDAL01');});","            pm.test('state is ' + pm.globals.get(\"STATEAL01\"), function() {pm.expect(instance['state']) == pm.globals.get('STATEAL01');});","        }","        if (instance.id == pm.globals.get(\"IDAL02\")) {","            pm.test('IDAL02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}alarm?state={{STATEAL01}}","host":["{{AI_Management}}alarm"],"query":[{"key":"state","value":"{{STATEAL01}}"}]},"description":"This operation filter a Alarm"},"response":[]},{"name":"PATCH ALARM","request":{"method":"PATCH","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"state\": \"cleared\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{AI_Management}}alarm/{{IDAL01}}","host":["{{AI_Management}}alarm"],"path":["{{IDAL01}}"]}},"response":[]}],"protocolProfileBehavior":{}},{"name":"E1","item":[{"name":"/Alarm/404ID","event":[{"listen":"test","script":{"id":"2dba6b59-46c3-479d-99f5-d11aed7b4fb7","exec":["pm.test(\"Status code is 404\", function () {","    pm.response.to.have.status(404);","});","",""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}alarm/6027d895-2986-4483-9817-30007d5802d1","host":["{{AI_Management}}alarm"],"path":["6027d895-2986-4483-9817-30007d5802d1"]},"description":"This operation search for one of the created Alarm"},"response":[]}],"protocolProfileBehavior":{}},{"name":"N1","item":[{"name":"/AiContractSpecification","event":[{"listen":"test","script":{"id":"23f7d65b-e81d-4a3e-bc6c-ccbfdc4a7251","exec":["var jsonData = pm.response.json();","","if (Array.isArray(jsonData)) { ","  ","    pm.test('Array not expected as response', function (){pm.expect.fail()});","  ","","}","","pm.test(\"Status code is 201\", function () {","  pm.response.to.have.status(201);","});","","var instance = pm.response.json();","var requiredAttributes = ['href', 'id', 'name'];","","pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","","","","pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","","pm.globals.set('HREFACS01', instance['href']);","pm.globals.set('IDACS01', instance['id']);","pm.globals.set('NAMEACS01', instance['name']);","","pm.test('Body includes value held on href', function () {","  pm.expect(pm.response.text()).to.include(instance['href']);","});","pm.test('Body includes value held on id', function () {","  pm.expect(pm.response.text()).to.include(instance['id']);","});","pm.test('Body includes value held on name', function () {","  pm.expect(pm.response.text()).to.include(instance['name']);","});",""],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"name\": \"AI Management Contract Specification for PCP\"\n}"},"url":{"raw":"{{AI_Management}}aiContractSpecification","host":["{{AI_Management}}aiContractSpecification"]},"description":"This operation creates a AiContractSpecification"},"response":[]},{"name":"/AiContractSpecification","event":[{"listen":"test","script":{"id":"c881b4c8-f8d0-4df4-a29f-df4c27bb897f","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDACS01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFACS01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFACS01');});","            pm.test('id is ' + pm.globals.get(\"IDACS01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDACS01');});","            pm.test('name is ' + pm.globals.get(\"NAMEACS01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEACS01');});","        }","        if (instance.id == pm.globals.get(\"IDACS02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFACS02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFACS02');});","            pm.test('id is ' + pm.globals.get(\"IDACS02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDACS02');});","            pm.test('name is ' + pm.globals.get(\"NAMEACS02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEACS02');});","        }  ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDACS01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFACS01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFACS01');});","            pm.test('id is ' + pm.globals.get(\"IDACS01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDACS01');});","            pm.test('name is ' + pm.globals.get(\"NAMEACS01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEACS01');});","        }","        if (instance.id == pm.globals.get(\"IDACS02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFACS02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFACS02');});","            pm.test('id is ' + pm.globals.get(\"IDACS02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDACS02');});","            pm.test('name is ' + pm.globals.get(\"NAMEACS02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEACS02');});","        }","   ","  }","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}aiContractSpecification","host":["{{AI_Management}}aiContractSpecification"]},"description":"This operation search for the created AiContractSpecification"},"response":[]},{"name":"/AiContractSpecification/{{IDACS01}}","event":[{"listen":"test","script":{"id":"c88ed036-9850-4e1a-b6f4-fac6e2eb2707","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDACS01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFACS01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFACS01');});","            pm.test('id is ' + pm.globals.get(\"IDACS01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDACS01');});","            pm.test('name is ' + pm.globals.get(\"NAMEACS01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEACS01');});","        }","        if (instance.id == pm.globals.get(\"IDACS02\")) {","            pm.test('IDACS02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDACS01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFACS01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFACS01');});","            pm.test('id is ' + pm.globals.get(\"IDACS01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDACS01');});","            pm.test('name is ' + pm.globals.get(\"NAMEACS01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEACS01');});","        }","        if (instance.id == pm.globals.get(\"IDACS02\")) {","            pm.test('IDACS02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}aiContractSpecification/{{IDACS01}}","host":["{{AI_Management}}aiContractSpecification"],"path":["{{IDACS01}}"]},"description":"This operation search for one of the created AiContractSpecification"},"response":[]}],"protocolProfileBehavior":{}},{"name":"N2","item":[{"name":"/AiContractSpecification?fields=href","event":[{"listen":"test","script":{"id":"53771bd1-7965-47da-aa18-5daba04731c9","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}aiContractSpecification?fields=href","host":["{{AI_Management}}aiContractSpecification"],"query":[{"key":"fields","value":"href"}]},"description":"This operation filter a AiContractSpecification"},"response":[]},{"name":"/AiContractSpecification?fields=id","event":[{"listen":"test","script":{"id":"cebdaeda-62ee-4497-b308-1382185c6edd","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}aiContractSpecification?fields=id","host":["{{AI_Management}}aiContractSpecification"],"query":[{"key":"fields","value":"id"}]},"description":"This operation filter a AiContractSpecification"},"response":[]},{"name":"/AiContractSpecification?id={{IDACS01}}","event":[{"listen":"test","script":{"id":"accdbda8-277b-4818-b7d5-b18b251050bd","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDACS01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFACS01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFACS01');});","            pm.test('id is ' + pm.globals.get(\"IDACS01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDACS01');});","            pm.test('name is ' + pm.globals.get(\"NAMEACS01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEACS01');});","        }","        if (instance.id == pm.globals.get(\"IDACS02\")) {","            pm.test('IDACS02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDACS01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFACS01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFACS01');});","            pm.test('id is ' + pm.globals.get(\"IDACS01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDACS01');});","            pm.test('name is ' + pm.globals.get(\"NAMEACS01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEACS01');});","        }","        if (instance.id == pm.globals.get(\"IDACS02\")) {","            pm.test('IDACS02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}aiContractSpecification?id={{IDACS01}}","host":["{{AI_Management}}aiContractSpecification"],"query":[{"key":"id","value":"{{IDACS01}}"}]},"description":"This operation filter a AiContractSpecification"},"response":[]},{"name":"/AiContractSpecification?fields=name","event":[{"listen":"test","script":{"id":"0becf021-3a26-4656-b871-5a9d06509385","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}aiContractSpecification?fields=name","host":["{{AI_Management}}aiContractSpecification"],"query":[{"key":"fields","value":"name"}]},"description":"This operation filter a AiContractSpecification"},"response":[]},{"name":"/AiContractSpecification?name={{NAMEACS01}}","event":[{"listen":"test","script":{"id":"519e0fed-c21c-4dda-83ac-9f3d57dc3062","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDACS01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFACS01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFACS01');});","            pm.test('id is ' + pm.globals.get(\"IDACS01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDACS01');});","            pm.test('name is ' + pm.globals.get(\"NAMEACS01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEACS01');});","        }","        if (instance.id == pm.globals.get(\"IDACS02\")) {","            pm.test('IDACS02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDACS01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFACS01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFACS01');});","            pm.test('id is ' + pm.globals.get(\"IDACS01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDACS01');});","            pm.test('name is ' + pm.globals.get(\"NAMEACS01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEACS01');});","        }","        if (instance.id == pm.globals.get(\"IDACS02\")) {","            pm.test('IDACS02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}aiContractSpecification?name={{NAMEACS01}}","host":["{{AI_Management}}aiContractSpecification"],"query":[{"key":"name","value":"{{NAMEACS01}}"}]},"description":"This operation filter a AiContractSpecification"},"response":[]}],"protocolProfileBehavior":{}},{"name":"E1","item":[{"name":"/AiContractSpecification/404ID","event":[{"listen":"test","script":{"id":"2f864960-c8c5-4ac2-aae5-4be64f533e72","exec":["pm.test(\"Status code is 404\", function () {","    pm.response.to.have.status(404);","});","",""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}aiContractSpecification/9c7a77bf-56cd-4058-ac33-bf1639cc968b","host":["{{AI_Management}}aiContractSpecification"],"path":["9c7a77bf-56cd-4058-ac33-bf1639cc968b"]},"description":"This operation search for one of the created AiContractSpecification"},"response":[]}],"protocolProfileBehavior":{}},{"name":"N1","item":[{"name":"/AiContractViolation","event":[{"listen":"test","script":{"id":"e4bb72cb-4174-45da-9ce3-1548deec2fe3","exec":["var jsonData = pm.response.json();","","if (Array.isArray(jsonData)) { ","  ","    pm.test('Array not expected as response', function (){pm.expect.fail()});","  ","","}","","pm.test(\"Status code is 201\", function () {","  pm.response.to.have.status(201);","});","","var instance = pm.response.json();","var requiredAttributes = ['aiContract', 'href', 'id', 'violation'];","","pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","","","","pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","","pm.globals.set('HREFACV01', instance['href']);","pm.globals.set('IDACV01', instance['id']);","","pm.test('Body includes value held on href', function () {","  pm.expect(pm.response.text()).to.include(instance['href']);","});","pm.test('Body includes value held on id', function () {","  pm.expect(pm.response.text()).to.include(instance['id']);","});",""],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"aiContract\": {\n    \"id\": \"4242\"\n  },\n  \"violation\": {\n    \"referenceValue\": \"10\",\n    \"operator\": \"GT\",\n    \"actualValue\": \"12\",\n    \"consequence\": \"Alarm\"\n  }\n}"},"url":{"raw":"{{AI_Management}}aiContractViolation","host":["{{AI_Management}}aiContractViolation"]},"description":"This operation creates a AiContractViolation"},"response":[]},{"name":"/AiContractViolation","event":[{"listen":"test","script":{"id":"3d6caa2b-1c7e-416d-9d9c-9f62c24b9138","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['aiContract', 'href', 'id', 'violation'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDACV01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFACV01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFACV01');});","            pm.test('id is ' + pm.globals.get(\"IDACV01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDACV01');});","        }","        if (instance.id == pm.globals.get(\"IDACV02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFACV02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFACV02');});","            pm.test('id is ' + pm.globals.get(\"IDACV02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDACV02');});","        }  ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['aiContract', 'href', 'id', 'violation'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDACV01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFACV01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFACV01');});","            pm.test('id is ' + pm.globals.get(\"IDACV01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDACV01');});","        }","        if (instance.id == pm.globals.get(\"IDACV02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFACV02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFACV02');});","            pm.test('id is ' + pm.globals.get(\"IDACV02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDACV02');});","        }","   ","  }","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}aiContractViolation","host":["{{AI_Management}}aiContractViolation"]},"description":"This operation search for the created AiContractViolation"},"response":[]},{"name":"/AiContractViolation/{{IDACV01}}","event":[{"listen":"test","script":{"id":"8ccbcc26-3359-4f80-9d54-59333517a4c3","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['aiContract', 'href', 'id', 'violation'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDACV01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFACV01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFACV01');});","            pm.test('id is ' + pm.globals.get(\"IDACV01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDACV01');});","        }","        if (instance.id == pm.globals.get(\"IDACV02\")) {","            pm.test('IDACV02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['aiContract', 'href', 'id', 'violation'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDACV01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFACV01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFACV01');});","            pm.test('id is ' + pm.globals.get(\"IDACV01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDACV01');});","        }","        if (instance.id == pm.globals.get(\"IDACV02\")) {","            pm.test('IDACV02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}aiContractViolation/{{IDACV01}}","host":["{{AI_Management}}aiContractViolation"],"path":["{{IDACV01}}"]},"description":"This operation search for one of the created AiContractViolation"},"response":[]}],"protocolProfileBehavior":{}},{"name":"N2","item":[{"name":"/AiContractViolation?fields=href","event":[{"listen":"test","script":{"id":"9ec01881-2000-43b6-a8ae-224e01692f58","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}aiContractViolation?fields=href","host":["{{AI_Management}}aiContractViolation"],"query":[{"key":"fields","value":"href"}]},"description":"This operation filter a AiContractViolation"},"response":[]},{"name":"/AiContractViolation?fields=id","event":[{"listen":"test","script":{"id":"2c3db1e1-71bf-41cd-b40a-d7e84bd9ff1a","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}aiContractViolation?fields=id","host":["{{AI_Management}}aiContractViolation"],"query":[{"key":"fields","value":"id"}]},"description":"This operation filter a AiContractViolation"},"response":[]},{"name":"/AiContractViolation?id={{IDACV01}}","event":[{"listen":"test","script":{"id":"511fa039-ca3a-46f0-b130-c6c5d2d65023","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['aiContract', 'href', 'id', 'violation'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDACV01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFACV01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFACV01');});","            pm.test('id is ' + pm.globals.get(\"IDACV01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDACV01');});","        }","        if (instance.id == pm.globals.get(\"IDACV02\")) {","            pm.test('IDACV02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['aiContract', 'href', 'id', 'violation'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDACV01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFACV01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFACV01');});","            pm.test('id is ' + pm.globals.get(\"IDACV01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDACV01');});","        }","        if (instance.id == pm.globals.get(\"IDACV02\")) {","            pm.test('IDACV02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}aiContractViolation?id={{IDACV01}}","host":["{{AI_Management}}aiContractViolation"],"query":[{"key":"id","value":"{{IDACV01}}"}]},"description":"This operation filter a AiContractViolation"},"response":[]}],"protocolProfileBehavior":{}},{"name":"E1","item":[{"name":"/AiContractViolation/404ID","event":[{"listen":"test","script":{"id":"ad5408b4-8325-49e5-b6fb-77654cfe7595","exec":["pm.test(\"Status code is 404\", function () {","    pm.response.to.have.status(404);","});","",""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}aiContractViolation/485679e2-b0a4-4d75-acfd-50dfd4125fac","host":["{{AI_Management}}aiContractViolation"],"path":["485679e2-b0a4-4d75-acfd-50dfd4125fac"]},"description":"This operation search for one of the created AiContractViolation"},"response":[]}],"protocolProfileBehavior":{}},{"name":"N1","item":[{"name":"/AiModelSpecification","event":[{"listen":"test","script":{"id":"1aa8c14c-4f4c-43bf-b090-6cb8c664ec6e","exec":["var jsonData = pm.response.json();","","if (Array.isArray(jsonData)) { ","  ","    pm.test('Array not expected as response', function (){pm.expect.fail()});","  ","","}","","pm.test(\"Status code is 201\", function () {","  pm.response.to.have.status(201);","});","","var instance = pm.response.json();","var requiredAttributes = ['href', 'id', 'name'];","","pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","","","","pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","","pm.globals.set('HREFAMS01', instance['href']);","pm.globals.set('IDAMS01', instance['id']);","pm.globals.set('NAMEAMS01', instance['name']);","","pm.test('Body includes value held on href', function () {","  pm.expect(pm.response.text()).to.include(instance['href']);","});","pm.test('Body includes value held on id', function () {","  pm.expect(pm.response.text()).to.include(instance['id']);","});","pm.test('Body includes value held on name', function () {","  pm.expect(pm.response.text()).to.include(instance['name']);","});",""],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"name\": \"PCP AIModelAsAService Specification\"\n}"},"url":{"raw":"{{AI_Management}}aiModelSpecification","host":["{{AI_Management}}aiModelSpecification"]},"description":"This operation creates a AiModelSpecification"},"response":[]},{"name":"/AiModelSpecification","event":[{"listen":"test","script":{"id":"221b798d-a835-492e-9d98-42c1c50908e6","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAMS01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFAMS01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAMS01');});","            pm.test('id is ' + pm.globals.get(\"IDAMS01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAMS01');});","            pm.test('name is ' + pm.globals.get(\"NAMEAMS01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEAMS01');});","        }","        if (instance.id == pm.globals.get(\"IDAMS02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFAMS02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAMS02');});","            pm.test('id is ' + pm.globals.get(\"IDAMS02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAMS02');});","            pm.test('name is ' + pm.globals.get(\"NAMEAMS02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEAMS02');});","        }  ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAMS01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFAMS01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAMS01');});","            pm.test('id is ' + pm.globals.get(\"IDAMS01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAMS01');});","            pm.test('name is ' + pm.globals.get(\"NAMEAMS01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEAMS01');});","        }","        if (instance.id == pm.globals.get(\"IDAMS02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFAMS02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAMS02');});","            pm.test('id is ' + pm.globals.get(\"IDAMS02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAMS02');});","            pm.test('name is ' + pm.globals.get(\"NAMEAMS02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEAMS02');});","        }","   ","  }","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}aiModelSpecification","host":["{{AI_Management}}aiModelSpecification"]},"description":"This operation search for the created AiModelSpecification"},"response":[]},{"name":"/AiModelSpecification/{{IDAMS01}}","event":[{"listen":"test","script":{"id":"ef7bbff2-baf3-400d-9e11-dc414822d0af","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAMS01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFAMS01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAMS01');});","            pm.test('id is ' + pm.globals.get(\"IDAMS01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAMS01');});","            pm.test('name is ' + pm.globals.get(\"NAMEAMS01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEAMS01');});","        }","        if (instance.id == pm.globals.get(\"IDAMS02\")) {","            pm.test('IDAMS02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAMS01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFAMS01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAMS01');});","            pm.test('id is ' + pm.globals.get(\"IDAMS01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAMS01');});","            pm.test('name is ' + pm.globals.get(\"NAMEAMS01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEAMS01');});","        }","        if (instance.id == pm.globals.get(\"IDAMS02\")) {","            pm.test('IDAMS02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}aiModelSpecification/{{IDAMS01}}","host":["{{AI_Management}}aiModelSpecification"],"path":["{{IDAMS01}}"]},"description":"This operation search for one of the created AiModelSpecification"},"response":[]}],"protocolProfileBehavior":{}},{"name":"N2","item":[{"name":"/AiModelSpecification?fields=href","event":[{"listen":"test","script":{"id":"cc427b23-7f96-4b32-9b89-0fddf75477f2","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}aiModelSpecification?fields=href","host":["{{AI_Management}}aiModelSpecification"],"query":[{"key":"fields","value":"href"}]},"description":"This operation filter a AiModelSpecification"},"response":[]},{"name":"/AiModelSpecification?fields=id","event":[{"listen":"test","script":{"id":"528e10a1-a268-461c-ba17-64462e1b159e","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}aiModelSpecification?fields=id","host":["{{AI_Management}}aiModelSpecification"],"query":[{"key":"fields","value":"id"}]},"description":"This operation filter a AiModelSpecification"},"response":[]},{"name":"/AiModelSpecification?id={{IDAMS01}}","event":[{"listen":"test","script":{"id":"a4e47f60-6c5d-4d6d-8fa0-12b8468cb04a","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAMS01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFAMS01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAMS01');});","            pm.test('id is ' + pm.globals.get(\"IDAMS01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAMS01');});","            pm.test('name is ' + pm.globals.get(\"NAMEAMS01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEAMS01');});","        }","        if (instance.id == pm.globals.get(\"IDAMS02\")) {","            pm.test('IDAMS02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAMS01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFAMS01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAMS01');});","            pm.test('id is ' + pm.globals.get(\"IDAMS01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAMS01');});","            pm.test('name is ' + pm.globals.get(\"NAMEAMS01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEAMS01');});","        }","        if (instance.id == pm.globals.get(\"IDAMS02\")) {","            pm.test('IDAMS02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}aiModelSpecification?id={{IDAMS01}}","host":["{{AI_Management}}aiModelSpecification"],"query":[{"key":"id","value":"{{IDAMS01}}"}]},"description":"This operation filter a AiModelSpecification"},"response":[]},{"name":"/AiModelSpecification?fields=name","event":[{"listen":"test","script":{"id":"20cf97e7-ba8c-40e3-bfc1-023ece3f79e0","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}aiModelSpecification?fields=name","host":["{{AI_Management}}aiModelSpecification"],"query":[{"key":"fields","value":"name"}]},"description":"This operation filter a AiModelSpecification"},"response":[]},{"name":"/AiModelSpecification?name={{NAMEAMS01}}","event":[{"listen":"test","script":{"id":"60617dfc-ab76-43f6-b79a-d4dfbf17815a","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAMS01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFAMS01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAMS01');});","            pm.test('id is ' + pm.globals.get(\"IDAMS01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAMS01');});","            pm.test('name is ' + pm.globals.get(\"NAMEAMS01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEAMS01');});","        }","        if (instance.id == pm.globals.get(\"IDAMS02\")) {","            pm.test('IDAMS02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAMS01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFAMS01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAMS01');});","            pm.test('id is ' + pm.globals.get(\"IDAMS01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAMS01');});","            pm.test('name is ' + pm.globals.get(\"NAMEAMS01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEAMS01');});","        }","        if (instance.id == pm.globals.get(\"IDAMS02\")) {","            pm.test('IDAMS02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}aiModelSpecification?name={{NAMEAMS01}}","host":["{{AI_Management}}aiModelSpecification"],"query":[{"key":"name","value":"{{NAMEAMS01}}"}]},"description":"This operation filter a AiModelSpecification"},"response":[]}],"protocolProfileBehavior":{}},{"name":"E1","item":[{"name":"/AiModelSpecification/404ID","event":[{"listen":"test","script":{"id":"878d8be2-5866-49dd-beeb-e9fa48044728","exec":["pm.test(\"Status code is 404\", function () {","    pm.response.to.have.status(404);","});","",""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}aiModelSpecification/6bf13340-4c4a-4c45-a5d6-91f16bbc7131","host":["{{AI_Management}}aiModelSpecification"],"path":["6bf13340-4c4a-4c45-a5d6-91f16bbc7131"]},"description":"This operation search for one of the created AiModelSpecification"},"response":[]}],"protocolProfileBehavior":{}},{"name":"N1","item":[{"name":"/AiContract","event":[{"listen":"test","script":{"id":"1721d8a9-a7f9-406b-9084-dbff92461740","exec":["var jsonData = pm.response.json();","","if (Array.isArray(jsonData)) { ","  ","    pm.test('Array not expected as response', function (){pm.expect.fail()});","  ","","}","","pm.test(\"Status code is 201\", function () {","  pm.response.to.have.status(201);","});","","var instance = pm.response.json();","var requiredAttributes = ['aiContractSpecification', 'href', 'id', 'relatedParty', 'state'];","","pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","","","","pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","pm.test('Response has state attribute', function() { pm.expect(instance[\"state\"]).to.be.a('string'); });","","pm.globals.set('HREFAC01', instance['href']);","pm.globals.set('IDAC01', instance['id']);","pm.globals.set('STATEAC01', instance['state']);","","pm.test('Body includes value held on href', function () {","  pm.expect(pm.response.text()).to.include(instance['href']);","});","pm.test('Body includes value held on id', function () {","  pm.expect(pm.response.text()).to.include(instance['id']);","});","pm.test('Body includes value held on state', function () {","  pm.expect(pm.response.text()).to.include(instance['state']);","});",""],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"aiContractSpecification\": {\n    \"id\": \"2435\"\n  },\n  \"aiModel\": {\n    \"id\": \"12312132\"\n  },\n\n  \"relatedParty\": [\n    {\n      \"id\": \"456\",\n      \"@referredType\": \"Organization\"\n    }\n  ],\n  \"state\": \"Active\"\n}"},"url":{"raw":"{{AI_Management}}aiContract","host":["{{AI_Management}}aiContract"]},"description":"This operation creates a AiContract"},"response":[]},{"name":"/AiContract","event":[{"listen":"test","script":{"id":"41ee0fbc-9a59-44b6-9467-e3351ebb2084","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['aiContractSpecification', 'href', 'id', 'relatedParty', 'state'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has state attribute', function() { pm.expect(instance[\"state\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on state', function () {","            pm.expect(pm.response.text()).to.include(instance['state']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAC01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFAC01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAC01');});","            pm.test('id is ' + pm.globals.get(\"IDAC01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAC01');});","            pm.test('state is ' + pm.globals.get(\"STATEAC01\"), function() {pm.expect(instance['state']) == pm.globals.get('STATEAC01');});","        }","        if (instance.id == pm.globals.get(\"IDAC02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFAC02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAC02');});","            pm.test('id is ' + pm.globals.get(\"IDAC02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAC02');});","            pm.test('state is ' + pm.globals.get(\"STATEAC02\"), function() {pm.expect(instance['state']) == pm.globals.get('STATEAC02');});","        }  ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['aiContractSpecification', 'href', 'id', 'relatedParty', 'state'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has state attribute', function() { pm.expect(instance[\"state\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on state', function () {","            pm.expect(pm.response.text()).to.include(instance['state']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAC01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFAC01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAC01');});","            pm.test('id is ' + pm.globals.get(\"IDAC01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAC01');});","            pm.test('state is ' + pm.globals.get(\"STATEAC01\"), function() {pm.expect(instance['state']) == pm.globals.get('STATEAC01');});","        }","        if (instance.id == pm.globals.get(\"IDAC02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFAC02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAC02');});","            pm.test('id is ' + pm.globals.get(\"IDAC02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAC02');});","            pm.test('state is ' + pm.globals.get(\"STATEAC02\"), function() {pm.expect(instance['state']) == pm.globals.get('STATEAC02');});","        }","   ","  }","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}aiContract","host":["{{AI_Management}}aiContract"]},"description":"This operation search for the created AiContract"},"response":[]},{"name":"/AiContract/{{IDAC01}}","event":[{"listen":"test","script":{"id":"1feb9ea9-5d4a-4986-a128-f3e0893709a7","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['aiContractSpecification', 'href', 'id', 'relatedParty', 'state'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has state attribute', function() { pm.expect(instance[\"state\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on state', function () {","            pm.expect(pm.response.text()).to.include(instance['state']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAC01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFAC01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAC01');});","            pm.test('id is ' + pm.globals.get(\"IDAC01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAC01');});","            pm.test('state is ' + pm.globals.get(\"STATEAC01\"), function() {pm.expect(instance['state']) == pm.globals.get('STATEAC01');});","        }","        if (instance.id == pm.globals.get(\"IDAC02\")) {","            pm.test('IDAC02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['aiContractSpecification', 'href', 'id', 'relatedParty', 'state'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has state attribute', function() { pm.expect(instance[\"state\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on state', function () {","            pm.expect(pm.response.text()).to.include(instance['state']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAC01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFAC01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAC01');});","            pm.test('id is ' + pm.globals.get(\"IDAC01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAC01');});","            pm.test('state is ' + pm.globals.get(\"STATEAC01\"), function() {pm.expect(instance['state']) == pm.globals.get('STATEAC01');});","        }","        if (instance.id == pm.globals.get(\"IDAC02\")) {","            pm.test('IDAC02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}aiContract/{{IDAC01}}","host":["{{AI_Management}}aiContract"],"path":["{{IDAC01}}"]},"description":"This operation search for one of the created AiContract"},"response":[]}],"protocolProfileBehavior":{}},{"name":"N2","item":[{"name":"/AiContract?fields=href","event":[{"listen":"test","script":{"id":"a706ebf6-00cf-49d7-8290-44bbf4dc7302","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}aiContract?fields=href","host":["{{AI_Management}}aiContract"],"query":[{"key":"fields","value":"href"}]},"description":"This operation filter a AiContract"},"response":[]},{"name":"/AiContract?fields=id","event":[{"listen":"test","script":{"id":"700c7c84-2fe7-4af2-a1f4-19d13aef0e23","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}aiContract?fields=id","host":["{{AI_Management}}aiContract"],"query":[{"key":"fields","value":"id"}]},"description":"This operation filter a AiContract"},"response":[]},{"name":"/AiContract?id={{IDAC01}}","event":[{"listen":"test","script":{"id":"fc4a3844-47ce-4f63-a9de-a6cab1f73758","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['aiContractSpecification', 'href', 'id', 'relatedParty', 'state'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has state attribute', function() { pm.expect(instance[\"state\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on state', function () {","            pm.expect(pm.response.text()).to.include(instance['state']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAC01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFAC01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAC01');});","            pm.test('id is ' + pm.globals.get(\"IDAC01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAC01');});","            pm.test('state is ' + pm.globals.get(\"STATEAC01\"), function() {pm.expect(instance['state']) == pm.globals.get('STATEAC01');});","        }","        if (instance.id == pm.globals.get(\"IDAC02\")) {","            pm.test('IDAC02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['aiContractSpecification', 'href', 'id', 'relatedParty', 'state'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has state attribute', function() { pm.expect(instance[\"state\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on state', function () {","            pm.expect(pm.response.text()).to.include(instance['state']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAC01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFAC01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAC01');});","            pm.test('id is ' + pm.globals.get(\"IDAC01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAC01');});","            pm.test('state is ' + pm.globals.get(\"STATEAC01\"), function() {pm.expect(instance['state']) == pm.globals.get('STATEAC01');});","        }","        if (instance.id == pm.globals.get(\"IDAC02\")) {","            pm.test('IDAC02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}aiContract?id={{IDAC01}}","host":["{{AI_Management}}aiContract"],"query":[{"key":"id","value":"{{IDAC01}}"}]},"description":"This operation filter a AiContract"},"response":[]},{"name":"/AiContract?fields=state","event":[{"listen":"test","script":{"id":"20902105-3b38-4903-a9cd-c3bf5cbb5009","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}aiContract?fields=state","host":["{{AI_Management}}aiContract"],"query":[{"key":"fields","value":"state"}]},"description":"This operation filter a AiContract"},"response":[]},{"name":"/AiContract?state={{STATEAC01}}","event":[{"listen":"test","script":{"id":"ae1e5d3b-ca81-4fff-9cd4-a2370618ab34","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['aiContractSpecification', 'href', 'id', 'relatedParty', 'state'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has state attribute', function() { pm.expect(instance[\"state\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on state', function () {","            pm.expect(pm.response.text()).to.include(instance['state']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAC01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFAC01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAC01');});","            pm.test('id is ' + pm.globals.get(\"IDAC01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAC01');});","            pm.test('state is ' + pm.globals.get(\"STATEAC01\"), function() {pm.expect(instance['state']) == pm.globals.get('STATEAC01');});","        }","        if (instance.id == pm.globals.get(\"IDAC02\")) {","            pm.test('IDAC02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['aiContractSpecification', 'href', 'id', 'relatedParty', 'state'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has state attribute', function() { pm.expect(instance[\"state\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on state', function () {","            pm.expect(pm.response.text()).to.include(instance['state']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAC01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFAC01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAC01');});","            pm.test('id is ' + pm.globals.get(\"IDAC01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAC01');});","            pm.test('state is ' + pm.globals.get(\"STATEAC01\"), function() {pm.expect(instance['state']) == pm.globals.get('STATEAC01');});","        }","        if (instance.id == pm.globals.get(\"IDAC02\")) {","            pm.test('IDAC02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}aiContract?state={{STATEAC01}}","host":["{{AI_Management}}aiContract"],"query":[{"key":"state","value":"{{STATEAC01}}"}]},"description":"This operation filter a AiContract"},"response":[]}],"protocolProfileBehavior":{}},{"name":"E1","item":[{"name":"/AiContract/404ID","event":[{"listen":"test","script":{"id":"1e03036f-dccf-43bd-a9d6-4e4e4ece490a","exec":["pm.test(\"Status code is 404\", function () {","    pm.response.to.have.status(404);","});","",""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}aiContract/cd582983-8864-400d-ad30-9ef71888cbb5","host":["{{AI_Management}}aiContract"],"path":["cd582983-8864-400d-ad30-9ef71888cbb5"]},"description":"This operation search for one of the created AiContract"},"response":[]}],"protocolProfileBehavior":{}},{"name":"N1","item":[{"name":"/AiModel","event":[{"listen":"test","script":{"id":"1a11e19e-39cd-4383-aed2-6341634b4e43","exec":["var jsonData = pm.response.json();","","if (Array.isArray(jsonData)) { ","  ","    pm.test('Array not expected as response', function (){pm.expect.fail()});","  ","","}","","pm.test(\"Status code is 201\", function () {","  pm.response.to.have.status(201);","});","","var instance = pm.response.json();","var requiredAttributes = ['href', 'id', 'state'];","","pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","","","","pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","","pm.globals.set('HREFAM01', instance['href']);","pm.globals.set('IDAM01', instance['id']);","","pm.test('Body includes value held on href', function () {","  pm.expect(pm.response.text()).to.include(instance['href']);","});","pm.test('Body includes value held on id', function () {","  pm.expect(pm.response.text()).to.include(instance['id']);","});",""],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"state\": \"active\",\n    \"software\": [{\n        \"href\": \"https://mycsp.com:8080/tmf-api/resourceInventory/v4/Software/tf.keras.optimizers\",\n        \"id\": \" tf.keras.optimizers\",\n        \"softwareVersion\": \"v2.2.0\",\n        \"@type\": \"SoftwareRef\",\n        \"@referredType\": \"Software\"\n    }],\n    \"aiModelSpecification\": {\n        \"@type\": \"AiModelSpecification\",\n        \"id\": \"1212\",\n        \"href\": \"https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v4/serviceSpecification/PCPAIModelAsAServiceSpecification\",\n        \"name\": \"PCPAIModelAsAServiceSpecification\",\n        \"version\": \"1.0.0\"\n    }\n}"},"url":{"raw":"{{AI_Management}}aiModel","host":["{{AI_Management}}aiModel"]},"description":"This operation creates a AiModel"},"response":[]},{"name":"/AiModel","event":[{"listen":"test","script":{"id":"8a249349-17c1-42b0-843e-2de33f9fcd4b","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['href', 'id', 'state'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAM01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFAM01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAM01');});","            pm.test('id is ' + pm.globals.get(\"IDAM01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAM01');});","        }","        if (instance.id == pm.globals.get(\"IDAM02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFAM02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAM02');});","            pm.test('id is ' + pm.globals.get(\"IDAM02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAM02');});","        }  ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['href', 'id', 'state'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAM01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFAM01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAM01');});","            pm.test('id is ' + pm.globals.get(\"IDAM01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAM01');});","        }","        if (instance.id == pm.globals.get(\"IDAM02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFAM02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAM02');});","            pm.test('id is ' + pm.globals.get(\"IDAM02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAM02');});","        }","   ","  }","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}aiModel","host":["{{AI_Management}}aiModel"]},"description":"This operation search for the created AiModel"},"response":[]},{"name":"/AiModel/{{IDAM01}}","event":[{"listen":"test","script":{"id":"d1f99791-27b4-4763-9f79-92577fd5acab","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['href', 'id', 'state'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAM01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFAM01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAM01');});","            pm.test('id is ' + pm.globals.get(\"IDAM01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAM01');});","        }","        if (instance.id == pm.globals.get(\"IDAM02\")) {","            pm.test('IDAM02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['href', 'id', 'state'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAM01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFAM01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAM01');});","            pm.test('id is ' + pm.globals.get(\"IDAM01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAM01');});","        }","        if (instance.id == pm.globals.get(\"IDAM02\")) {","            pm.test('IDAM02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}aiModel/{{IDAM01}}","host":["{{AI_Management}}aiModel"],"path":["{{IDAM01}}"]},"description":"This operation search for one of the created AiModel"},"response":[]}],"protocolProfileBehavior":{}},{"name":"N2","item":[{"name":"/AiModel?fields=href","event":[{"listen":"test","script":{"id":"bffab429-de61-4f32-870a-2868545ae2f3","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}aiModel?fields=href","host":["{{AI_Management}}aiModel"],"query":[{"key":"fields","value":"href"}]},"description":"This operation filter a AiModel"},"response":[]},{"name":"/AiModel?fields=id","event":[{"listen":"test","script":{"id":"4cfdcee6-1b91-4375-823a-d97903e5bc31","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}aiModel?fields=id","host":["{{AI_Management}}aiModel"],"query":[{"key":"fields","value":"id"}]},"description":"This operation filter a AiModel"},"response":[]},{"name":"/AiModel?id={{IDAM01}}","event":[{"listen":"test","script":{"id":"44eff58e-5634-430c-85d3-acb529ec2322","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['href', 'id', 'state'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAM01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFAM01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAM01');});","            pm.test('id is ' + pm.globals.get(\"IDAM01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAM01');});","        }","        if (instance.id == pm.globals.get(\"IDAM02\")) {","            pm.test('IDAM02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['href', 'id', 'state'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDAM01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFAM01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFAM01');});","            pm.test('id is ' + pm.globals.get(\"IDAM01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDAM01');});","        }","        if (instance.id == pm.globals.get(\"IDAM02\")) {","            pm.test('IDAM02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}aiModel?id={{IDAM01}}","host":["{{AI_Management}}aiModel"],"query":[{"key":"id","value":"{{IDAM01}}"}]},"description":"This operation filter a AiModel"},"response":[]}],"protocolProfileBehavior":{}},{"name":"E1","item":[{"name":"/AiModel/404ID","event":[{"listen":"test","script":{"id":"75022e35-6ac5-465b-b7c4-c3cc0912b0e4","exec":["pm.test(\"Status code is 404\", function () {","    pm.response.to.have.status(404);","});","",""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}aiModel/a1d494bc-d8ee-4e1e-9583-4095331fa1b2","host":["{{AI_Management}}aiModel"],"path":["a1d494bc-d8ee-4e1e-9583-4095331fa1b2"]},"description":"This operation search for one of the created AiModel"},"response":[]}],"protocolProfileBehavior":{}},{"name":"N1","item":[{"name":"/Rule","event":[{"listen":"test","script":{"id":"e2cfcb34-5a54-4338-9aab-d3c286264558","exec":["var jsonData = pm.response.json();","","if (Array.isArray(jsonData)) { ","  ","    pm.test('Array not expected as response', function (){pm.expect.fail()});","  ","","}","","pm.test(\"Status code is 201\", function () {","  pm.response.to.have.status(201);","});","","var instance = pm.response.json();","var requiredAttributes = ['href', 'id', 'name'];","","pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","","","","pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","","pm.globals.set('HREFRU01', instance['href']);","pm.globals.set('IDRU01', instance['id']);","pm.globals.set('NAMERU01', instance['name']);","","pm.test('Body includes value held on href', function () {","  pm.expect(pm.response.text()).to.include(instance['href']);","});","pm.test('Body includes value held on id', function () {","  pm.expect(pm.response.text()).to.include(instance['id']);","});","pm.test('Body includes value held on name', function () {","  pm.expect(pm.response.text()).to.include(instance['name']);","});",""],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n      \"name\": \"DroppedPacketsPPS\",\n    \"@type\": \"AlgorithmThresholdRule\"\n    \n}"},"url":{"raw":"{{AI_Management}}rule","host":["{{AI_Management}}rule"]},"description":"This operation creates a Rule"},"response":[]},{"name":"/Rule","event":[{"listen":"test","script":{"id":"0c5b77f7-e747-4a04-ba4b-27358f40146a","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDRU01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFRU01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFRU01');});","            pm.test('id is ' + pm.globals.get(\"IDRU01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDRU01');});","            pm.test('name is ' + pm.globals.get(\"NAMERU01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMERU01');});","        }","        if (instance.id == pm.globals.get(\"IDRU02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFRU02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFRU02');});","            pm.test('id is ' + pm.globals.get(\"IDRU02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDRU02');});","            pm.test('name is ' + pm.globals.get(\"NAMERU02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMERU02');});","        }  ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDRU01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFRU01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFRU01');});","            pm.test('id is ' + pm.globals.get(\"IDRU01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDRU01');});","            pm.test('name is ' + pm.globals.get(\"NAMERU01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMERU01');});","        }","        if (instance.id == pm.globals.get(\"IDRU02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFRU02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFRU02');});","            pm.test('id is ' + pm.globals.get(\"IDRU02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDRU02');});","            pm.test('name is ' + pm.globals.get(\"NAMERU02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMERU02');});","        }","   ","  }","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}rule","host":["{{AI_Management}}rule"]},"description":"This operation search for the created Rule"},"response":[]},{"name":"/Rule/{{IDRU01}}","event":[{"listen":"test","script":{"id":"fa1308eb-70e4-4f5c-97fa-f242d285912b","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDRU01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFRU01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFRU01');});","            pm.test('id is ' + pm.globals.get(\"IDRU01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDRU01');});","            pm.test('name is ' + pm.globals.get(\"NAMERU01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMERU01');});","        }","        if (instance.id == pm.globals.get(\"IDRU02\")) {","            pm.test('IDRU02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDRU01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFRU01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFRU01');});","            pm.test('id is ' + pm.globals.get(\"IDRU01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDRU01');});","            pm.test('name is ' + pm.globals.get(\"NAMERU01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMERU01');});","        }","        if (instance.id == pm.globals.get(\"IDRU02\")) {","            pm.test('IDRU02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}rule/{{IDRU01}}","host":["{{AI_Management}}rule"],"path":["{{IDRU01}}"]},"description":"This operation search for one of the created Rule"},"response":[]}],"protocolProfileBehavior":{}},{"name":"N2","item":[{"name":"/Rule?fields=href","event":[{"listen":"test","script":{"id":"bb98f3c6-0c46-4a32-b01d-fa93b12893c5","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}rule?fields=href","host":["{{AI_Management}}rule"],"query":[{"key":"fields","value":"href"}]},"description":"This operation filter a Rule"},"response":[]},{"name":"/Rule?fields=id","event":[{"listen":"test","script":{"id":"fb9a7860-4fe6-46ff-a29a-a661fdf6aa14","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}rule?fields=id","host":["{{AI_Management}}rule"],"query":[{"key":"fields","value":"id"}]},"description":"This operation filter a Rule"},"response":[]},{"name":"/Rule?id={{IDRU01}}","event":[{"listen":"test","script":{"id":"6773343b-2fe7-428e-81df-213526df1906","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDRU01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFRU01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFRU01');});","            pm.test('id is ' + pm.globals.get(\"IDRU01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDRU01');});","            pm.test('name is ' + pm.globals.get(\"NAMERU01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMERU01');});","        }","        if (instance.id == pm.globals.get(\"IDRU02\")) {","            pm.test('IDRU02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDRU01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFRU01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFRU01');});","            pm.test('id is ' + pm.globals.get(\"IDRU01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDRU01');});","            pm.test('name is ' + pm.globals.get(\"NAMERU01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMERU01');});","        }","        if (instance.id == pm.globals.get(\"IDRU02\")) {","            pm.test('IDRU02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}rule?id={{IDRU01}}","host":["{{AI_Management}}rule"],"query":[{"key":"id","value":"{{IDRU01}}"}]},"description":"This operation filter a Rule"},"response":[]},{"name":"/Rule?fields=name","event":[{"listen":"test","script":{"id":"47666b71-38e2-4a27-925a-2f8b1efb7fec","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}rule?fields=name","host":["{{AI_Management}}rule"],"query":[{"key":"fields","value":"name"}]},"description":"This operation filter a Rule"},"response":[]},{"name":"/Rule?name={{NAMERU01}}","event":[{"listen":"test","script":{"id":"9038aad4-0a23-4353-bba5-7980131c1cf6","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDRU01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFRU01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFRU01');});","            pm.test('id is ' + pm.globals.get(\"IDRU01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDRU01');});","            pm.test('name is ' + pm.globals.get(\"NAMERU01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMERU01');});","        }","        if (instance.id == pm.globals.get(\"IDRU02\")) {","            pm.test('IDRU02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDRU01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFRU01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFRU01');});","            pm.test('id is ' + pm.globals.get(\"IDRU01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDRU01');});","            pm.test('name is ' + pm.globals.get(\"NAMERU01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMERU01');});","        }","        if (instance.id == pm.globals.get(\"IDRU02\")) {","            pm.test('IDRU02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}rule?name={{NAMERU01}}","host":["{{AI_Management}}rule"],"query":[{"key":"name","value":"{{NAMERU01}}"}]},"description":"This operation filter a Rule"},"response":[]}],"protocolProfileBehavior":{}},{"name":"E1","item":[{"name":"/Rule/404ID","event":[{"listen":"test","script":{"id":"9a3c2e85-3de5-493a-93e6-739569f18a3c","exec":["pm.test(\"Status code is 404\", function () {","    pm.response.to.have.status(404);","});","",""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{AI_Management}}rule/3ec1c167-6e8a-4fe6-9881-759755f0f678","host":["{{AI_Management}}rule"],"path":["3ec1c167-6e8a-4fe6-9881-759755f0f678"]},"description":"This operation search for one of the created Rule"},"response":[]}],"protocolProfileBehavior":{}}],"protocolProfileBehavior":{}}